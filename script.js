const mods = [
  "–ì–∏–ø–µ—Ä-—Å–Ω–µ–∂–∫–∏ ‚ùÑÔ∏è", 
  "–®–∞—Ö—Ç—ë—Ä—ã-–±–æ—Ç—ã ü§ñ", 
  "–ü–æ—Ä—Ç–∞–ª—ã –≤ —Å–ª—É—á–∞–π–Ω—ã–µ –∏–∑–º–µ—Ä–µ–Ω–∏—è üîÆ",
  "–õ–µ—Ç–∞—é—â–∏–µ –ª–æ–¥–∫–∏ üöÄ",
  "–°–≤–µ—Ç—è—â–∏–µ—Å—è –∫–Ω–∏–≥–∏ üìò",
  "–ú–∞–≥–∏—á–µ—Å–∫–∏–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã üíé",
  "–í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ç–ª–∏ ‚è≥",
  "–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–µ –≥—Ä–∏–±—ã üçÑ"
];
const names = [
  "–ó–∏–Ω—Ç–æ—Ä", "–ê–ª–∞–π—Ä–∞", "–ö—Å–∞—Ä–≥—É—Å", "–õ—é–º–µ–Ω–∞", "–î—Ä–∞–∫–≤–æ—Ä", "–¢–∞–π—Ä–∏–Ω",
  "–≠–ª—å–≤–∏—Ä–∞", "–†–∏–Ω—Ç–∞—Ä", "–°–µ–ª–µ–Ω–∞", "–ì–æ—Ä–≤–µ–Ω", "–ú–∏—Ä–∞—ç–ª—å", "–§–∞–ª–∫–æ—Ä",
  "–õ–∏—Ä–∞—ç–ª—å", "–î—Ä–µ–π–∫", "–¢–∞—Ä–∏–Ω–∞", "–ö–µ–ª—å–≤–∏–Ω", "–ù–∞–π–ª–∞", "–û—Ä–ª–µ–Ω",
  "–í–∏—Ä–µ–Ω", "–°–µ—Ä–∞–Ω–∞", "–≠—Ä–∞–Ω–¥–æ—Ä", "–ê–π–ª–∏–Ω–∞", "–ú–æ—Ä–≤–µ–Ω", "–ó–∞—Ä–µ–∫",
  "–ö–∞–π–ª–∏–Ω", "–≠–ª–∏–æ—Ä–∞", "–¢–∞–Ω—Ä–∏—Å", "–§–∞–π—Ä–∞", "–≠—Å–∫–∞—Ä", "–ù–∏–º–∞—Ä–∞"
];


const resultBox = document.getElementById("result");
const historyList = document.getElementById("history");

document.getElementById("generate").addEventListener("click", () => {
  const mode = document.getElementById("mode").value;
  let result = "";

  if (mode === "seed") {
    const seed = generateRandomSeed();
    result = "üåç –°–∏–¥: " + seed;
  } else if (mode === "mod") {
    result = "üõ†Ô∏è –ò–¥–µ—è –º–æ–¥–∞: " + random(mods);
  } else if (mode === "name") {
    result = "üë§ –ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: " + random(names);
  }

  resultBox.textContent = result;
  resultBox.classList.remove("animated");
  void resultBox.offsetWidth; 
  resultBox.classList.add("animated");

  addToHistory(result);
});

document.getElementById("copy").addEventListener("click", () => {
  const text = resultBox.textContent;
  if (!text) return;
  navigator.clipboard.writeText(text).then(() => {
    alert("–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!");
  });
});

document.getElementById("themeToggle").addEventListener("click", () => {
  document.body.classList.toggle("light");
  const themeBtn = document.getElementById("themeToggle");
  themeBtn.textContent = document.body.classList.contains("light") ? "‚òÄÔ∏è" : "üåô";
});

function addToHistory(text) {
  const li = document.createElement("li");
  li.textContent = text;
  historyList.prepend(li);
  if (historyList.children.length > 10) {
    historyList.removeChild(historyList.lastChild);
  }
}

function random(arr) {
  return arr[Math.floor(Math.random() * arr.length)];
}

function generateRandomSeed() {
  
  const min = -2000000000;
  const max = 2000000000;
  return Math.floor(Math.random() * (max - min + 1)) + min;
}


document.getElementById("download").addEventListener("click", () => {
  const canvas = document.createElement("canvas");
  const ctx = canvas.getContext("2d");
  canvas.width = 600;
  canvas.height = 100;

  ctx.fillStyle = document.body.classList.contains("light") ? "#f5f5f5" : "#203a43";
  ctx.fillRect(0, 0, canvas.width, canvas.height);

  ctx.font = "20px Segoe UI";
  ctx.fillStyle = document.body.classList.contains("light") ? "#111" : "#fff";
  ctx.fillText(resultBox.textContent, 20, 60);

  const link = document.createElement("a");
  link.download = "result.png";
  link.href = canvas.toDataURL();
  link.click();
});


window.addEventListener("load", () => {
  document.body.classList.add("loaded");
  const splash = document.getElementById("splash");
  splash.classList.add("fade-out");
  setTimeout(() => {
    splash.remove();
  }, 1000);
});

document.getElementById("clearHistory").addEventListener("click", () => {
  historyList.innerHTML = "";
  alert("–ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞!");
});
